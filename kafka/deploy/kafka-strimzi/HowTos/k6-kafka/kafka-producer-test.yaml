# kafka-bridge-test.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-bridge-test
  namespace: kafka
data:
  kafka-test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export let options = {
      vus: 5,
      duration: '2m',
    };

    export default function() {
      const message = {
        records: [
          {
            key: `test-key-${__VU}-${__ITER}`,
            value: `Test message from VU ${__VU}, iteration ${__ITER} at ${new Date().toISOString()}`
          }
        ]
      };

      const params = {
        headers: {
          'Content-Type': 'application/vnd.kafka.json.v2+json',
        },
      };

      const response = http.post(
        'http://kafka-bridge-bridge-service:8080/topics/sales',
        JSON.stringify(message),
        params
      );

      check(response, {
        'mensagem enviada': (r) => r.status === 200,
        'response time < 500ms': (r) => r.timings.duration < 500,
      });

      sleep(1);
    }
---
# kafka-test-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-performance-test
  namespace: kafka
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: k6
        image: grafana/k6:latest
        command: [ "k6", "run", "/scripts/kafka-test.js" ]
        volumeMounts:
        - name: test-script
          mountPath: /scripts
        env:
        - name: K6_LOG_OUTPUT
          value: "stdout"
      volumes:
      - name: test-script
        configMap:
          name: kafka-bridge-test
