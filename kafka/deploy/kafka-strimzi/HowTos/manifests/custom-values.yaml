prometheus:
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/backend-protocol: HTTP

    pathType: ImplementationSpecific
    paths:
    - /prom(/|$)(.*)

  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    ruleSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorNamespaceSelector: {}
    ruleNamespaceSelector: {}
    additionalScrapeConfigsSecret:
      enabled: true
      name: additional-scrape-configs
      key: prometheus-additional.yaml
defaultRules:
  additionalPrometheusRulesMap:
    strimzi-kube-state-metrics-rules:
      groups:
      - name: strimzi-kube-state-metrics
        rules:
        - alert: KafkaTopicNotReady
          expr: strimzi_kafka_topic_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaTopic {{ $labels.topicName }} is not ready"
        - alert: KafkaTopicDeprecated
          expr: strimzi_kafka_topic_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaTopic {{ $labels.topicName }} contains a deprecated configuration"
        - alert: KafkaUserNotReady
          expr: strimzi_kafka_user_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaUser {{ $labels.username }} is not ready"
        - alert: KafkaUserDeprecated
          expr: strimzi_kafka_user_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaUser {{ $labels.username }} contains a deprecated configuration"
        - alert: KafkaNotReady
          expr: strimzi_kafka_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi Kafka {{ $labels.name }} using {{ $labels.kafka_version }} is not ready"
        - alert: KafkaDeprecated
          expr: strimzi_kafka_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi Kafka {{ $labels.name }} contains a deprecated configuration"
        # KafkaNodePool is not having a ready status as this is implemented via Kafka resource
        - alert: KafkaNodePoolDeprecated
          expr: strimzi_kafka_node_pool_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaNodePool {{ $labels.name }} contains a deprecated configuration"
        # StrimziPodSet is not having any further information as it is an internal resource and doesn't get operated by the user
        - alert: KafkaRebalanceNotReady
          expr: strimzi_kafka_rebalance_resource_info{ready!="True",template!="true"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaRebalance {{ $labels.name }} is not ready"
        - alert: KafkaRebalanceProposalPending
          expr: strimzi_kafka_rebalance_resource_info{ready="True",template!="true",proposal_ready="True"}
          for: 1h
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaRebalance {{ $labels.name }} is in proposal pending state and waits for approval for more than 1h."
        - alert: KafkaRebalanceRebalancing
          expr: strimzi_kafka_rebalance_resource_info{ready="True",template!="true",rebalancing="True"}
          for: 1h
          labels:
            severity: info
          annotations:
            message: "Strimzi KafkaRebalance {{ $labels.name }} is taking longer than 1h."
        - alert: KafkaRebalanceDeprecated
          expr: strimzi_kafka_rebalance_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaRebalance {{ $labels.name }} contains a deprecated configuration"
        - alert: KafkaConnectNotReady
          expr: strimzi_kafka_connect_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaConnect {{ $labels.name }} is not ready"
        - alert: KafkaConnectDeprecated
          expr: strimzi_kafka_connect_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaConnect {{ $labels.name }} contains a deprecated configuration"
        - alert: KafkaConnectorNotReady
          expr: strimzi_kafka_connector_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaConnector {{ $labels.name }} is not ready"
        - alert: KafkaConnectorDeprecated
          expr: strimzi_kafka_connector_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaConnector {{ $labels.name }} contains a deprecated configuration"
        - alert: KafkaMirrorMaker2NotReady
          expr: strimzi_kafka_mm2_resource_info{ready!="True"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaMirrorMaker2 {{ $labels.name }} is not ready"
        - alert: KafkaMirrorMaker2Deprecated
          expr: strimzi_kafka_mm2_resource_info{deprecated="Warning"}
          for: 15m
          labels:
            severity: warning
          annotations:
            message: "Strimzi KafkaMirrorMaker2 {{ $labels.name }} contains a deprecated configuration"
    strimizi-kafka-rules:
      groups:
      - name: kafka
        rules:
        - alert: KafkaRunningOutOfSpace
          expr: kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"data(-[0-9]+)?-(.+)-kafka-[0-9]+"} * 100 / kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"data(-[0-9]+)?-(.+)-kafka-[0-9]+"} < 15
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka is running out of free disk space'
            description: 'There are only {{ $value }} percent available at {{ $labels.persistentvolumeclaim }} PVC'
        - alert: UnderReplicatedPartitions
          expr: kafka_server_replicamanager_underreplicatedpartitions > 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka under replicated partitions'
            description: 'There are {{ $value }} under replicated partitions on {{ $labels.kubernetes_pod_name }}'
        - alert: AbnormalControllerState
          expr: sum(kafka_controller_kafkacontroller_activecontrollercount) by (strimzi_io_name) != 1
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka abnormal controller state'
            description: 'There are {{ $value }} active controllers in the cluster'
        - alert: OfflinePartitions
          expr: sum(kafka_controller_kafkacontroller_offlinepartitionscount) > 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka offline partitions'
            description: 'One or more partitions have no leader'
        - alert: UnderMinIsrPartitionCount
          expr: kafka_server_replicamanager_underminisrpartitioncount > 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka under min ISR partitions'
            description: 'There are {{ $value }} partitions under the min ISR on {{ $labels.kubernetes_pod_name }}'
        - alert: OfflineLogDirectoryCount
          expr: kafka_log_logmanager_offlinelogdirectorycount > 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka offline log directories'
            description: 'There are {{ $value }} offline log directories on {{ $labels.kubernetes_pod_name }}'
        - alert: ScrapeProblem
          expr: up{kubernetes_namespace!~"openshift-.+",kubernetes_pod_name=~".+-kafka-[0-9]+"} == 0
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'Prometheus unable to scrape metrics from {{ $labels.kubernetes_pod_name }}/{{ $labels.instance }}'
            description: 'Prometheus was unable to scrape metrics from {{ $labels.kubernetes_pod_name }}/{{ $labels.instance }} for more than 3 minutes'
        - alert: ClusterOperatorContainerDown
          expr: count((container_last_seen{container="strimzi-cluster-operator"} > (time() - 90))) < 1 or absent(container_last_seen{container="strimzi-cluster-operator"})
          for: 1m
          labels:
            severity: major
          annotations:
            summary: 'Cluster Operator down'
            description: 'The Cluster Operator has been down for longer than 90 seconds'
        - alert: KafkaBrokerContainersDown
          expr: absent(container_last_seen{container="kafka",pod=~".+-kafka-[0-9]+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'All `kafka` containers down or in CrashLookBackOff status'
            description: 'All `kafka` containers have been down or in CrashLookBackOff status for 3 minutes'
        - alert: KafkaContainerRestartedInTheLast5Minutes
          expr: count(count_over_time(container_last_seen{container="kafka"}[5m])) > 2 * count(container_last_seen{container="kafka",pod=~".+-kafka-[0-9]+"})
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: 'One or more Kafka containers restarted too often'
            description: 'One or more Kafka containers were restarted too often within the last 5 minutes'
      - name: entityOperator
        rules:
        - alert: TopicOperatorContainerDown
          expr: absent(container_last_seen{container="topic-operator",pod=~".+-entity-operator-.+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'Container topic-operator in Entity Operator pod down or in CrashLookBackOff status'
            description: 'Container topic-operator in Entity Operator pod has been or in CrashLookBackOff status for 3 minutes'
        - alert: UserOperatorContainerDown
          expr: absent(container_last_seen{container="user-operator",pod=~".+-entity-operator-.+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'Container user-operator in Entity Operator pod down or in CrashLookBackOff status'
            description: 'Container user-operator in Entity Operator pod have been down or in CrashLookBackOff status for 3 minutes'
      - name: connect
        rules:
        - alert: ConnectContainersDown
          expr: absent(container_last_seen{container=~".+-connect",pod=~".+-connect-.+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'All Kafka Connect containers down or in CrashLookBackOff status'
            description: 'All Kafka Connect containers have been down or in CrashLookBackOff status for 3 minutes'
        - alert: ConnectFailedConnector
          expr: sum(kafka_connect_connector_status{status="failed"}) > 0
          for: 5m
          labels:
            severity: major
          annotations:
            summary: 'Kafka Connect Connector Failure'
            description: 'One or more connectors have been in failed state for 5 minutes,'
        - alert: ConnectFailedTask
          expr: sum(kafka_connect_worker_connector_failed_task_count) > 0
          for: 5m
          labels:
            severity: major
          annotations:
            summary: 'Kafka Connect Task Failure'
            description: 'One or more tasks have been in failed state for 5 minutes.'
      - name: bridge
        rules:
        - alert: BridgeContainersDown
          expr: absent(container_last_seen{container=~".+-bridge",pod=~".+-bridge-.+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'All Kafka Bridge containers down or in CrashLookBackOff status'
            description: 'All Kafka Bridge containers have been down or in CrashLookBackOff status for 3 minutes'
        - alert: AvgProducerLatency
          expr: strimzi_bridge_kafka_producer_request_latency_avg > 10
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka Bridge producer average request latency'
            description: 'The average producer request latency is {{ $value }} on {{ $labels.clientId }}'
        - alert: AvgConsumerFetchLatency
          expr: strimzi_bridge_kafka_consumer_fetch_latency_avg > 500
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka Bridge consumer average fetch latency'
            description: 'The average consumer fetch latency is {{ $value }} on {{ $labels.clientId }}'
        - alert: AvgConsumerCommitLatency
          expr: strimzi_bridge_kafka_consumer_commit_latency_avg > 200
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Kafka Bridge consumer average commit latency'
            description: 'The average consumer commit latency is {{ $value }} on {{ $labels.clientId }}'
        - alert: Http4xxErrorRate
          expr: strimzi_bridge_http_server_requestCount_total{code=~"^4..$", container=~"^.+-bridge", path !="/favicon.ico"} > 10
          for: 1m
          labels:
            severity: warning
          annotations:
            summary: 'Kafka Bridge returns code 4xx too often'
            description: 'Kafka Bridge returns code 4xx too much ({{ $value }}) for the path {{ $labels.path }}'
        - alert: Http5xxErrorRate
          expr: strimzi_bridge_http_server_requestCount_total{code=~"^5..$", container=~"^.+-bridge"} > 10
          for: 1m
          labels:
            severity: warning
          annotations:
            summary: 'Kafka Bridge returns code 5xx too often'
            description: 'Kafka Bridge returns code 5xx too much ({{ $value }}) for the path {{ $labels.path }}'
      - name: mirrorMaker2
        rules:
        - alert: MirrorMaker2ContainerDown
          expr: absent(container_last_seen{container=~".+-mirrormaker2",pod=~".+-mirrormaker2-.+"})
          for: 3m
          labels:
            severity: major
          annotations:
            summary: 'All Kafka Mirror Maker 2 containers down or in CrashLookBackOff status'
            description: 'All Kafka Mirror Maker 2 containers have been down or in CrashLookBackOff status for 3 minutes'
      - name: kafkaExporter
        rules:
        - alert: UnderReplicatedPartition
          expr: kafka_topic_partition_under_replicated_partition > 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Topic has under-replicated partitions'
            description: 'Topic  {{ $labels.topic }} has {{ $value }} under-replicated partition {{ $labels.partition }}'
        - alert: TooLargeConsumerGroupLag
          expr: kafka_consumergroup_lag > 1000
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'Consumer group lag is too big'
            description: 'Consumer group {{ $labels.consumergroup}} lag is too big ({{ $value }}) on topic {{ $labels.topic }}/partition {{ $labels.partition }}'
        - alert: NoMessageForTooLong
          expr: changes(kafka_topic_partition_current_offset[10m]) == 0
          for: 10s
          labels:
            severity: warning
          annotations:
            summary: 'No message for 10 minutes'
            description: 'There is no messages in topic {{ $labels.topic}}/partition {{ $labels.partition }} for 10 minutes'
      - name: certificates
        interval: 1m0s
        rules:
        - alert: CertificateExpiration
          expr: |
            strimzi_certificate_expiration_timestamp_ms/1000 - time() < 30 * 24 * 60 * 60
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: 'Certificate will expire in less than 30 days'
            description: 'Certificate of type {{ $labels.type }} in cluster {{ $labels.cluster }} in namespace {{ $labels.resource_namespace }} will expire in less than 30 days'
grafana:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/use-regex: "true"
      #  nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/backend-protocol: HTTP

    pathType: Prefix
    paths:
    - /

  operator:
    dashboardsConfigMapRefEnabled: true
    matchLabels:
      app: grafana
      grafana_dashboard: "1"
    dashboardsConfigMaps:
    - strimzi-kafka-bridge
    - strimzi-kafka
    - strimzi-kraft
    - strimzi-operators
